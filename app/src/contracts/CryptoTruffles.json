{
  "contractName": "CryptoTruffles",
  "abi": [
    {
      "constant": true,
      "inputs": [
        {
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function",
      "signature": "0x01ffc9a7"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function",
      "signature": "0x06fdde03"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "getApproved",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function",
      "signature": "0x081812fc"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function",
      "signature": "0x095ea7b3"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "from",
          "type": "address"
        },
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function",
      "signature": "0x23b872dd"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "from",
          "type": "address"
        },
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function",
      "signature": "0x42842e0e"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "ownerOf",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function",
      "signature": "0x6352211e"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function",
      "signature": "0x70a08231"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function",
      "signature": "0x715018a6"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function",
      "signature": "0x8da5cb5b"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "isOwner",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function",
      "signature": "0x8f32d59b"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function",
      "signature": "0x95d89b41"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "setApprovalForAll",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function",
      "signature": "0xa22cb465"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "from",
          "type": "address"
        },
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function",
      "signature": "0xb88d4fde"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "owner",
          "type": "address"
        },
        {
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "isApprovedForAll",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function",
      "signature": "0xe985e9c5"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function",
      "signature": "0xf2fde38b"
    },
    {
      "inputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor",
      "signature": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event",
      "signature": "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "to",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event",
      "signature": "0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "approved",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event",
      "signature": "0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "ApprovalForAll",
      "type": "event",
      "signature": "0x17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_title",
          "type": "string"
        },
        {
          "name": "_color",
          "type": "string"
        },
        {
          "name": "_emotion",
          "type": "uint256"
        }
      ],
      "name": "mint",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function",
      "signature": "0xd41d9a27"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_truffleId",
          "type": "uint256"
        }
      ],
      "name": "getTruffle",
      "outputs": [
        {
          "name": "title",
          "type": "string"
        },
        {
          "name": "color",
          "type": "string"
        },
        {
          "name": "emotion",
          "type": "uint8"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function",
      "signature": "0xa727ddb9"
    }
  ],
  "bytecode": "0x60806040526040805190810160405280600d81526020017f43727970746f54727566666c65000000000000000000000000000000000000008152506006908051906020019062000051929190620002aa565b506040805190810160405280600381526020017f5452460000000000000000000000000000000000000000000000000000000000815250600790805190602001906200009f929190620002aa565b50348015620000ad57600080fd5b50620000eb6301ffc9a77c010000000000000000000000000000000000000000000000000000000002620001ec640100000000026401000000009004565b620001286380ac58cd7c010000000000000000000000000000000000000000000000000000000002620001ec640100000000026401000000009004565b33600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a362000359565b63ffffffff7c010000000000000000000000000000000000000000000000000000000002817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916141515156200023e57600080fd5b6001600080837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10620002ed57805160ff19168380011785556200031e565b828001600101855582156200031e579182015b828111156200031d57825182559160200191906001019062000300565b5b5090506200032d919062000331565b5090565b6200035691905b808211156200035257600081600090555060010162000338565b5090565b90565b611e5080620003696000396000f3fe608060405234801561001057600080fd5b5060043610610133576000357c0100000000000000000000000000000000000000000000000000000000900480638da5cb5b116100bf578063a727ddb91161008e578063a727ddb9146105c7578063b88d4fde146106ef578063d41d9a27146107f4578063e985e9c514610950578063f2fde38b146109cc57610133565b80638da5cb5b146104885780638f32d59b146104d257806395d89b41146104f4578063a22cb4651461057757610133565b806323b872dd1161010657806323b872dd146102dc57806342842e0e1461034a5780636352211e146103b857806370a0823114610426578063715018a61461047e57610133565b806301ffc9a71461013857806306fdde031461019d578063081812fc14610220578063095ea7b31461028e575b600080fd5b6101836004803603602081101561014e57600080fd5b8101908080357bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19169060200190929190505050610a10565b604051808215151515815260200191505060405180910390f35b6101a5610a77565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156101e55780820151818401526020810190506101ca565b50505050905090810190601f1680156102125780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b61024c6004803603602081101561023657600080fd5b8101908080359060200190929190505050610b15565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6102da600480360360408110156102a457600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610b66565b005b610348600480360360608110156102f257600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610cab565b005b6103b66004803603606081101561036057600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610cd0565b005b6103e4600480360360208110156103ce57600080fd5b8101908080359060200190929190505050610cf1565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6104686004803603602081101561043c57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610d6f565b6040518082815260200191505060405180910390f35b610486610dfa565b005b610490610ece565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6104da610ef8565b604051808215151515815260200191505060405180910390f35b6104fc610f50565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561053c578082015181840152602081019050610521565b50505050905090810190601f1680156105695780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6105c56004803603604081101561058d57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803515159060200190929190505050610fee565b005b6105f3600480360360208110156105dd57600080fd5b810190808035906020019092919050505061112a565b60405180806020018060200184600381111561060b57fe5b60ff168152602001838103835286818151815260200191508051906020019080838360005b8381101561064b578082015181840152602081019050610630565b50505050905090810190601f1680156106785780820380516001836020036101000a031916815260200191505b50838103825285818151815260200191508051906020019080838360005b838110156106b1578082015181840152602081019050610696565b50505050905090810190601f1680156106de5780820380516001836020036101000a031916815260200191505b509550505050505060405180910390f35b6107f26004803603608081101561070557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291908035906020019064010000000081111561076c57600080fd5b82018360208201111561077e57600080fd5b803590602001918460018302840111640100000000831117156107a057600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192905050506112f0565b005b61094e6004803603606081101561080a57600080fd5b810190808035906020019064010000000081111561082757600080fd5b82018360208201111561083957600080fd5b8035906020019184600183028401116401000000008311171561085b57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290803590602001906401000000008111156108be57600080fd5b8201836020820111156108d057600080fd5b803590602001918460018302840111640100000000831117156108f257600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050919291929080359060200190929190505050611318565b005b6109b26004803603604081101561096657600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061142c565b604051808215151515815260200191505060405180910390f35b610a0e600480360360208110156109e257600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506114c0565b005b6000806000837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060009054906101000a900460ff169050919050565b60068054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610b0d5780601f10610ae257610100808354040283529160200191610b0d565b820191906000526020600020905b815481529060010190602001808311610af057829003601f168201915b505050505081565b6000610b20826114df565b1515610b2b57600080fd5b6002600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b6000610b7182610cf1565b90508073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614151515610bae57600080fd5b8073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161480610bee5750610bed813361142c565b5b1515610bf957600080fd5b826002600084815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550818373ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a4505050565b610cb53382611551565b1515610cc057600080fd5b610ccb8383836115e6565b505050565b610cec83838360206040519081016040528060008152506112f0565b505050565b6000806001600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614151515610d6657600080fd5b80915050919050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614151515610dac57600080fd5b610df3600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206117ad565b9050919050565b610e02610ef8565b1515610e0d57600080fd5b600073ffffffffffffffffffffffffffffffffffffffff16600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a36000600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b6000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614905090565b60078054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610fe65780601f10610fbb57610100808354040283529160200191610fe6565b820191906000526020600020905b815481529060010190602001808311610fc957829003601f168201915b505050505081565b3373ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415151561102957600080fd5b80600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051808215151515815260200191505060405180910390a35050565b6060806000611137611d52565b60088581548110151561114657fe5b906000526020600020906003020160606040519081016040529081600082018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156111f95780601f106111ce576101008083540402835291602001916111f9565b820191906000526020600020905b8154815290600101906020018083116111dc57829003601f168201915b50505050508152602001600182018054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561129b5780601f106112705761010080835404028352916020019161129b565b820191906000526020600020905b81548152906001019060200180831161127e57829003601f168201915b505050505081526020016002820160009054906101000a900460ff1660038111156112c257fe5b60038111156112cd57fe5b815250509050806000015193508060200151925080604001519150509193909250565b6112fb848484610cab565b611307848484846117bb565b151561131257600080fd5b50505050565b611320610ef8565b151561132b57600080fd5b8060038081111561133857fe5b1015151561134557600080fd5b61134d611d52565b60606040519081016040528085815260200184815260200183600381111561137157fe5b600381111561137c57fe5b8152509050600060016008839080600181540180825580915050906001820390600052602060002090600302016000909192909190915060008201518160000190805190602001906113cf929190611d7f565b5060208201518160010190805190602001906113ec929190611d7f565b5060408201518160020160006101000a81548160ff0219169083600381111561141157fe5b0217905550505003905061142533826119de565b5050505050565b6000600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b6114c8610ef8565b15156114d357600080fd5b6114dc81611b28565b50565b6000806001600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415915050919050565b60008061155d83610cf1565b90508073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1614806115cc57508373ffffffffffffffffffffffffffffffffffffffff166115b484610b15565b73ffffffffffffffffffffffffffffffffffffffff16145b806115dd57506115dc818561142c565b5b91505092915050565b8273ffffffffffffffffffffffffffffffffffffffff1661160682610cf1565b73ffffffffffffffffffffffffffffffffffffffff1614151561162857600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415151561166457600080fd5b61166d81611c24565b6116b4600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020611ce4565b6116fb600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020611d07565b816001600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4505050565b600081600001549050919050565b60006117dc8473ffffffffffffffffffffffffffffffffffffffff16611d1d565b15156117eb57600190506119d6565b60008473ffffffffffffffffffffffffffffffffffffffff1663150b7a02338887876040518563ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200183815260200180602001828103825283818151815260200191508051906020019080838360005b838110156118e25780820151818401526020810190506118c7565b50505050905090810190601f16801561190f5780820380516001836020036101000a031916815260200191505b5095505050505050602060405180830381600087803b15801561193157600080fd5b505af1158015611945573d6000803e3d6000fd5b505050506040513d602081101561195b57600080fd5b8101908080519060200190929190505050905063150b7a027c0100000000000000000000000000000000000000000000000000000000027bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149150505b949350505050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614151515611a1a57600080fd5b611a23816114df565b151515611a2f57600080fd5b816001600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550611ac8600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020611d07565b808273ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a45050565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614151515611b6457600080fd5b8073ffffffffffffffffffffffffffffffffffffffff16600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a380600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600073ffffffffffffffffffffffffffffffffffffffff166002600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16141515611ce15760006002600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b50565b611cfc60018260000154611d3090919063ffffffff16565b816000018190555050565b6001816000016000828254019250508190555050565b600080823b905060008111915050919050565b6000828211151515611d4157600080fd5b600082840390508091505092915050565b606060405190810160405280606081526020016060815260200160006003811115611d7957fe5b81525090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10611dc057805160ff1916838001178555611dee565b82800160010185558215611dee579182015b82811115611ded578251825591602001919060010190611dd2565b5b509050611dfb9190611dff565b5090565b611e2191905b80821115611e1d576000816000905550600101611e05565b5090565b9056fea165627a7a72305820398b1a6c5e5d006ea2ad750f9b3b9359df00354e98b7a01790efad8d6af01c9d0029",
  "deployedBytecode": "",
  "sourceMap": "188:1447:0:-;;;235:36;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;275:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;364:26;8:9:-1;5:2;;;30:1;27;20:12;5:2;364:26:0;639:40:3;236:10;658:20;;639:18;;;:40;;;:::i;:::-;1970::7;1227:10;1989:20;;1970:18;;;:40;;;:::i;:::-;524:10:6;515:6;;:19;;;;;;;;;;;;;;;;;;582:6;;;;;;;;;;;549:40;;578:1;549:40;;;;;;;;;;;;188:1447:0;;989:158:3;1079:10;1064:25;;:11;:25;;;;;1056:34;;;;;;;;1136:4;1100:20;:33;1121:11;1100:33;;;;;;;;;;;;;;;;;;:40;;;;;;;;;;;;;;;;;;989:158;:::o;188:1447:0:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;",
  "deployedSourceMap": "188:1447:0:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;188:1447:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;777:133:3;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;777:133:3;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;235:36:0;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;235:36:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3773:151:7;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3773:151:7;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;3196:292;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3196:292:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;5329:180;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;5329:180:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;6142:132;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;6142:132:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;2598:177;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2598:177:7;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;2220:160;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2220:160:7;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1423:137:6;;;:::i;:::-;;659:77;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;979:90;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;275:28:0;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;275:28:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4216:213:7;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;4216:213:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1370:263:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1370:263:0;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1370:263:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1370:263:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6979:211:7;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;6979:211:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;6979:211:7;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;6979:211:7;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;6979:211:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;6979:211:7;;;;;;;;;;;;;;;:::i;:::-;;867:329:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;867:329:0;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;867:329:0;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;867:329:0;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;867:329:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;867:329:0;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;867:329:0;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;867:329:0;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;867:329:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;867:329:0;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;4750:145:7;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;4750:145:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;1731:107:6;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1731:107:6;;;;;;;;;;;;;;;;;;;:::i;:::-;;777:133:3;847:4;870:20;:33;891:11;870:33;;;;;;;;;;;;;;;;;;;;;;;;;;;863:40;;777:133;;;:::o;235:36:0:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;3773:151:7:-;3832:7;3859:16;3867:7;3859;:16::i;:::-;3851:25;;;;;;;;3893:15;:24;3909:7;3893:24;;;;;;;;;;;;;;;;;;;;;3886:31;;3773:151;;;:::o;3196:292::-;3259:13;3275:16;3283:7;3275;:16::i;:::-;3259:32;;3315:5;3309:11;;:2;:11;;;;3301:20;;;;;;;;3353:5;3339:19;;:10;:19;;;:58;;;;3362:35;3379:5;3386:10;3362:16;:35::i;:::-;3339:58;3331:67;;;;;;;;3436:2;3409:15;:24;3425:7;3409:24;;;;;;;;;;;;:29;;;;;;;;;;;;;;;;;;3473:7;3469:2;3453:28;;3462:5;3453:28;;;;;;;;;;;;3196:292;;;:::o;5329:180::-;5419:39;5438:10;5450:7;5419:18;:39::i;:::-;5411:48;;;;;;;;5470:32;5484:4;5490:2;5494:7;5470:13;:32::i;:::-;5329:180;;;:::o;6142:132::-;6228:39;6245:4;6251:2;6255:7;6228:39;;;;;;;;;;;;;:16;:39::i;:::-;6142:132;;;:::o;2598:177::-;2653:7;2672:13;2688:11;:20;2700:7;2688:20;;;;;;;;;;;;;;;;;;;;;2672:36;;2743:1;2726:19;;:5;:19;;;;2718:28;;;;;;;;2763:5;2756:12;;;2598:177;;;:::o;2220:160::-;2275:7;2319:1;2302:19;;:5;:19;;;;2294:28;;;;;;;;2339:34;:17;:24;2357:5;2339:24;;;;;;;;;;;;;;;:32;:34::i;:::-;2332:41;;2220:160;;;:::o;1423:137:6:-;863:9;:7;:9::i;:::-;855:18;;;;;;;;1521:1;1484:40;;1505:6;;;;;;;;;;;1484:40;;;;;;;;;;;;1551:1;1534:6;;:19;;;;;;;;;;;;;;;;;;1423:137::o;659:77::-;697:7;723:6;;;;;;;;;;;716:13;;659:77;:::o;979:90::-;1019:4;1056:6;;;;;;;;;;;1042:20;;:10;:20;;;1035:27;;979:90;:::o;275:28:0:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;4216:213:7:-;4301:10;4295:16;;:2;:16;;;;4287:25;;;;;;;;4359:8;4322:18;:30;4341:10;4322:30;;;;;;;;;;;;;;;:34;4353:2;4322:34;;;;;;;;;;;;;;;;:45;;;;;;;;;;;;;;;;;;4409:2;4382:40;;4397:10;4382:40;;;4413:8;4382:40;;;;;;;;;;;;;;;;;;;;;;4216:213;;:::o;1370:263:0:-;1428:19;1449;1470:15;1493:23;;:::i;:::-;1519:8;1528:10;1519:20;;;;;;;;;;;;;;;;;;;;1493:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1554:8;:14;;;1546:22;;1582:8;:14;;;1574:22;;1612:8;:16;;;1602:26;;1370:263;;;;;;:::o;6979:211:7:-;7085:31;7098:4;7104:2;7108:7;7085:12;:31::i;:::-;7134:48;7157:4;7163:2;7167:7;7176:5;7134:22;:48::i;:::-;7126:57;;;;;;;;6979:211;;;;:::o;867:329:0:-;863:9:6;:7;:9::i;:::-;855:18;;;;;;;;993:8:0;976:12;971:18;;;;;;;;:30;;963:39;;;;;;;;1009:23;;:::i;:::-;1035:69;;;;;;;;;1052:6;1035:69;;;;1067:6;1035:69;;;;1092:8;1084:17;;;;;;;;1035:69;;;;;;;;;;;1009:95;;1110:15;1154:1;1128:8;1142;1128:23;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;1128:23:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:27;1110:45;;1162:29;1168:10;1180;1162:5;:29::i;:::-;883:1:6;;867:329:0;;;:::o;4750:145:7:-;4830:4;4853:18;:25;4872:5;4853:25;;;;;;;;;;;;;;;:35;4879:8;4853:35;;;;;;;;;;;;;;;;;;;;;;;;;4846:42;;4750:145;;;;:::o;1731:107:6:-;863:9;:7;:9::i;:::-;855:18;;;;;;;;1803:28;1822:8;1803:18;:28::i;:::-;1731:107;:::o;7384:152:7:-;7441:4;7457:13;7473:11;:20;7485:7;7473:20;;;;;;;;;;;;;;;;;;;;;7457:36;;7527:1;7510:19;;:5;:19;;;;7503:26;;;7384:152;;;:::o;7896:246::-;7981:4;7997:13;8013:16;8021:7;8013;:16::i;:::-;7997:32;;8058:5;8047:16;;:7;:16;;;:51;;;;8091:7;8067:31;;:20;8079:7;8067:11;:20::i;:::-;:31;;;8047:51;:87;;;;8102:32;8119:5;8126:7;8102:16;:32::i;:::-;8047:87;8039:96;;;7896:246;;;;:::o;9844:362::-;9957:4;9937:24;;:16;9945:7;9937;:16::i;:::-;:24;;;9929:33;;;;;;;;9994:1;9980:16;;:2;:16;;;;9972:25;;;;;;;;10008:23;10023:7;10008:14;:23::i;:::-;10042:35;:17;:23;10060:4;10042:23;;;;;;;;;;;;;;;:33;:35::i;:::-;10087:33;:17;:21;10105:2;10087:21;;;;;;;;;;;;;;;:31;:33::i;:::-;10154:2;10131:11;:20;10143:7;10131:20;;;;;;;;;;;;:25;;;;;;;;;;;;;;;;;;10191:7;10187:2;10172:27;;10181:4;10172:27;;;;;;;;;;;;9844:362;;;:::o;1062:112:2:-;1127:7;1153;:14;;;1146:21;;1062:112;;;:::o;10734:347:7:-;10855:4;10880:15;:2;:13;;;:15::i;:::-;10879:16;10875:58;;;10918:4;10911:11;;;;10875:58;10943:13;10975:2;10959:36;;;10996:10;11008:4;11014:7;11023:5;10959:70;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;10959:70:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;10959:70:7;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;10959:70:7;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;10959:70:7;;;;;;;;;;;;;;;;10943:86;;713:10;11057:16;;11047:26;;;:6;:26;;;;11039:35;;;10734:347;;;;;;;:::o;8385:259::-;8470:1;8456:16;;:2;:16;;;;8448:25;;;;;;;;8492:16;8500:7;8492;:16::i;:::-;8491:17;8483:26;;;;;;;;8543:2;8520:11;:20;8532:7;8520:20;;;;;;;;;;;;:25;;;;;;;;;;;;;;;;;;8555:33;:17;:21;8573:2;8555:21;;;;;;;;;;;;;;;:31;:33::i;:::-;8629:7;8625:2;8604:33;;8621:1;8604:33;;;;;;;;;;;;8385:259;;:::o;1982:183:6:-;2075:1;2055:22;;:8;:22;;;;2047:31;;;;;;;;2122:8;2093:38;;2114:6;;;;;;;;;;;2093:38;;;;;;;;;;;;2150:8;2141:6;;:17;;;;;;;;;;;;;;;;;;1982:183;:::o;11242:171:7:-;11341:1;11305:38;;:15;:24;11321:7;11305:24;;;;;;;;;;;;;;;;;;;;;:38;;;;11301:106;;;11394:1;11359:15;:24;11375:7;11359:24;;;;;;;;;;;;:37;;;;;;;;;;;;;;;;;;11301:106;11242:171;:::o;1275:108:2:-;1355:21;1374:1;1355:7;:14;;;:18;;:21;;;;:::i;:::-;1338:7;:14;;:38;;;;1275:108;:::o;1180:89::-;1261:1;1243:7;:14;;;:19;;;;;;;;;;;1180:89;:::o;463:616:10:-;523:4;539:12;1038:7;1026:20;1018:28;;1071:1;1064:4;:8;1057:15;;;463:616;;;:::o;1211:145:5:-;1269:7;1301:1;1296;:6;;1288:15;;;;;;;;1313:9;1329:1;1325;:5;1313:17;;1348:1;1341:8;;;1211:145;;;;:::o;188:1447:0:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o",
  "source": "pragma solidity ^0.5.2;\n\nimport '../node_modules/openzeppelin-solidity/contracts/token/ERC721/ERC721.sol';\nimport '../node_modules/openzeppelin-solidity/contracts/ownership/Ownable.sol';\n\ncontract CryptoTruffles is ERC721, Ownable {\n  string public name = \"CryptoTruffle\";\n  string public symbol = \"TRF\";\n\n  // Array to store the truffles\n  Truffle[] truffles;\n\n  constructor() public {\n  }\n\n  // Enum with the different emotions of the truffle\n  enum Emotion { HAPPY, LAUGHING, WINKING, COOL }\n\n  // Struct containing the details of the truffle\n  struct Truffle {\n    string title;\n    string color;\n    Emotion emotion;\n  }\n\n  /**\n  * @dev Mints a fresh new Truffle\n  * @param _title string with the title / name of the truffle\n  * @param _color string (hex / css color name) of the truffle\n  * @param _emotion uint256 indidcating the emotion of the truffle\n  */\n  function mint(string memory _title, string memory _color, uint _emotion) public onlyOwner {\n    require(uint(Emotion.COOL) >= _emotion);\n\n    Truffle memory _truffle = Truffle({ title: _title, color: _color, emotion: Emotion(_emotion) });\n    uint _truffleId = truffles.push(_truffle) - 1;\n\n    _mint(msg.sender, _truffleId);\n  }\n\n  /**\n  * @dev Gets the details of the requested Truffle\n  * @param _truffleId uint256 ID of the truffle\n  * @return  title (name), color and emotion of the truffle\n  */\n  function getTruffle(uint _truffleId) public view returns (string memory title, string memory color, Emotion emotion) {\n    Truffle memory _truffle = truffles[_truffleId];\n\n    title = _truffle.title;\n    color = _truffle.color;\n    emotion = _truffle.emotion;\n  }\n}\n",
  "sourcePath": "/Users/bluer/Developer/truffle-u-cryptotruffles/contracts/CryptoTruffles.sol",
  "ast": {
    "absolutePath": "/Users/bluer/Developer/truffle-u-cryptotruffles/contracts/CryptoTruffles.sol",
    "exportedSymbols": {
      "CryptoTruffles": [
        112
      ]
    },
    "id": 113,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".2"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:0"
      },
      {
        "absolutePath": "/Users/bluer/Developer/truffle-u-cryptotruffles/node_modules/openzeppelin-solidity/contracts/token/ERC721/ERC721.sol",
        "file": "../node_modules/openzeppelin-solidity/contracts/token/ERC721/ERC721.sol",
        "id": 2,
        "nodeType": "ImportDirective",
        "scope": 113,
        "sourceUnit": 1062,
        "src": "25:81:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/bluer/Developer/truffle-u-cryptotruffles/node_modules/openzeppelin-solidity/contracts/ownership/Ownable.sol",
        "file": "../node_modules/openzeppelin-solidity/contracts/ownership/Ownable.sol",
        "id": 3,
        "nodeType": "ImportDirective",
        "scope": 113,
        "sourceUnit": 517,
        "src": "107:79:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 4,
              "name": "ERC721",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1061,
              "src": "215:6:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC721_$1061",
                "typeString": "contract ERC721"
              }
            },
            "id": 5,
            "nodeType": "InheritanceSpecifier",
            "src": "215:6:0"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 6,
              "name": "Ownable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 516,
              "src": "223:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Ownable_$516",
                "typeString": "contract Ownable"
              }
            },
            "id": 7,
            "nodeType": "InheritanceSpecifier",
            "src": "223:7:0"
          }
        ],
        "contractDependencies": [
          269,
          279,
          516,
          1061,
          1164
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 112,
        "linearizedBaseContracts": [
          112,
          516,
          1061,
          1164,
          269,
          279
        ],
        "name": "CryptoTruffles",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 10,
            "name": "name",
            "nodeType": "VariableDeclaration",
            "scope": 112,
            "src": "235:36:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 8,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "235:6:0",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "43727970746f54727566666c65",
              "id": 9,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "string",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "256:15:0",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_stringliteral_382c7cc53deb5a67708ac081c7a2b14d01a1f6b46fa00c259d32abdefce28aec",
                "typeString": "literal_string \"CryptoTruffle\""
              },
              "value": "CryptoTruffle"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 13,
            "name": "symbol",
            "nodeType": "VariableDeclaration",
            "scope": 112,
            "src": "275:28:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 11,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "275:6:0",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "545246",
              "id": 12,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "string",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "298:5:0",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_stringliteral_a60fcebaee63e207242929916a51981c1c28619b8c468829f8d428354b2461fe",
                "typeString": "literal_string \"TRF\""
              },
              "value": "TRF"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 16,
            "name": "truffles",
            "nodeType": "VariableDeclaration",
            "scope": 112,
            "src": "341:18:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_struct$_Truffle_$32_storage_$dyn_storage",
              "typeString": "struct CryptoTruffles.Truffle[]"
            },
            "typeName": {
              "baseType": {
                "contractScope": null,
                "id": 14,
                "name": "Truffle",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 32,
                "src": "341:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Truffle_$32_storage_ptr",
                  "typeString": "struct CryptoTruffles.Truffle"
                }
              },
              "id": 15,
              "length": null,
              "nodeType": "ArrayTypeName",
              "src": "341:9:0",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_struct$_Truffle_$32_storage_$dyn_storage_ptr",
                "typeString": "struct CryptoTruffles.Truffle[]"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 19,
              "nodeType": "Block",
              "src": "385:5:0",
              "statements": []
            },
            "documentation": null,
            "id": 20,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 17,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "375:2:0"
            },
            "returnParameters": {
              "id": 18,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "385:0:0"
            },
            "scope": 112,
            "src": "364:26:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "canonicalName": "CryptoTruffles.Emotion",
            "id": 25,
            "members": [
              {
                "id": 21,
                "name": "HAPPY",
                "nodeType": "EnumValue",
                "src": "462:5:0"
              },
              {
                "id": 22,
                "name": "LAUGHING",
                "nodeType": "EnumValue",
                "src": "469:8:0"
              },
              {
                "id": 23,
                "name": "WINKING",
                "nodeType": "EnumValue",
                "src": "479:7:0"
              },
              {
                "id": 24,
                "name": "COOL",
                "nodeType": "EnumValue",
                "src": "488:4:0"
              }
            ],
            "name": "Emotion",
            "nodeType": "EnumDefinition",
            "src": "447:47:0"
          },
          {
            "canonicalName": "CryptoTruffles.Truffle",
            "id": 32,
            "members": [
              {
                "constant": false,
                "id": 27,
                "name": "title",
                "nodeType": "VariableDeclaration",
                "scope": 32,
                "src": "569:12:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 26,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "569:6:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 29,
                "name": "color",
                "nodeType": "VariableDeclaration",
                "scope": 32,
                "src": "587:12:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 28,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "587:6:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 31,
                "name": "emotion",
                "nodeType": "VariableDeclaration",
                "scope": 32,
                "src": "605:15:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_enum$_Emotion_$25",
                  "typeString": "enum CryptoTruffles.Emotion"
                },
                "typeName": {
                  "contractScope": null,
                  "id": 30,
                  "name": "Emotion",
                  "nodeType": "UserDefinedTypeName",
                  "referencedDeclaration": 25,
                  "src": "605:7:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_Emotion_$25",
                    "typeString": "enum CryptoTruffles.Emotion"
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "Truffle",
            "nodeType": "StructDefinition",
            "scope": 112,
            "src": "548:77:0",
            "visibility": "public"
          },
          {
            "body": {
              "id": 77,
              "nodeType": "Block",
              "src": "957:239:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 49,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 45,
                                "name": "Emotion",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 25,
                                "src": "976:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_enum$_Emotion_$25_$",
                                  "typeString": "type(enum CryptoTruffles.Emotion)"
                                }
                              },
                              "id": 46,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberName": "COOL",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "976:12:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_Emotion_$25",
                                "typeString": "enum CryptoTruffles.Emotion"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_enum$_Emotion_$25",
                                "typeString": "enum CryptoTruffles.Emotion"
                              }
                            ],
                            "id": 44,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "971:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint256_$",
                              "typeString": "type(uint256)"
                            },
                            "typeName": "uint"
                          },
                          "id": 47,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "971:18:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 48,
                          "name": "_emotion",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 38,
                          "src": "993:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "971:30:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 43,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1217,
                        1218
                      ],
                      "referencedDeclaration": 1217,
                      "src": "963:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 50,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "963:39:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 51,
                  "nodeType": "ExpressionStatement",
                  "src": "963:39:0"
                },
                {
                  "assignments": [
                    53
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 53,
                      "name": "_truffle",
                      "nodeType": "VariableDeclaration",
                      "scope": 77,
                      "src": "1009:23:0",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Truffle_$32_memory_ptr",
                        "typeString": "struct CryptoTruffles.Truffle"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 52,
                        "name": "Truffle",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 32,
                        "src": "1009:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Truffle_$32_storage_ptr",
                          "typeString": "struct CryptoTruffles.Truffle"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 61,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 55,
                        "name": "_title",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 34,
                        "src": "1052:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 56,
                        "name": "_color",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 36,
                        "src": "1067:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 58,
                            "name": "_emotion",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 38,
                            "src": "1092:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 57,
                          "name": "Emotion",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 25,
                          "src": "1084:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_enum$_Emotion_$25_$",
                            "typeString": "type(enum CryptoTruffles.Emotion)"
                          }
                        },
                        "id": 59,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1084:17:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_Emotion_$25",
                          "typeString": "enum CryptoTruffles.Emotion"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": null,
                      "id": 54,
                      "name": "Truffle",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 32,
                      "src": "1035:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_struct$_Truffle_$32_storage_ptr_$",
                        "typeString": "type(struct CryptoTruffles.Truffle storage pointer)"
                      }
                    },
                    "id": 60,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "structConstructorCall",
                    "lValueRequested": false,
                    "names": [
                      "title",
                      "color",
                      "emotion"
                    ],
                    "nodeType": "FunctionCall",
                    "src": "1035:69:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Truffle_$32_memory",
                      "typeString": "struct CryptoTruffles.Truffle memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1009:95:0"
                },
                {
                  "assignments": [
                    63
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 63,
                      "name": "_truffleId",
                      "nodeType": "VariableDeclaration",
                      "scope": 77,
                      "src": "1110:15:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 62,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "1110:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 70,
                  "initialValue": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 69,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 66,
                          "name": "_truffle",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 53,
                          "src": "1142:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Truffle_$32_memory_ptr",
                            "typeString": "struct CryptoTruffles.Truffle memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_struct$_Truffle_$32_memory_ptr",
                            "typeString": "struct CryptoTruffles.Truffle memory"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "id": 64,
                          "name": "truffles",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 16,
                          "src": "1128:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_Truffle_$32_storage_$dyn_storage",
                            "typeString": "struct CryptoTruffles.Truffle storage ref[] storage ref"
                          }
                        },
                        "id": 65,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "push",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "1128:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_arraypush_nonpayable$_t_struct$_Truffle_$32_storage_$returns$_t_uint256_$",
                          "typeString": "function (struct CryptoTruffles.Truffle storage ref) returns (uint256)"
                        }
                      },
                      "id": 67,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1128:23:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "-",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "31",
                      "id": 68,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1154:1:0",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "1128:27:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1110:45:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 72,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1214,
                          "src": "1168:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 73,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "1168:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 74,
                        "name": "_truffleId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 63,
                        "src": "1180:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 71,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 888,
                      "src": "1162:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 75,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1162:29:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 76,
                  "nodeType": "ExpressionStatement",
                  "src": "1162:29:0"
                }
              ]
            },
            "documentation": "@dev Mints a fresh new Truffle\n@param _title string with the title / name of the truffle\n@param _color string (hex / css color name) of the truffle\n@param _emotion uint256 indidcating the emotion of the truffle",
            "id": 78,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 41,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 40,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 450,
                  "src": "947:9:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "947:9:0"
              }
            ],
            "name": "mint",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 39,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 34,
                  "name": "_title",
                  "nodeType": "VariableDeclaration",
                  "scope": 78,
                  "src": "881:20:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 33,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "881:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 36,
                  "name": "_color",
                  "nodeType": "VariableDeclaration",
                  "scope": 78,
                  "src": "903:20:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 35,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "903:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 38,
                  "name": "_emotion",
                  "nodeType": "VariableDeclaration",
                  "scope": 78,
                  "src": "925:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 37,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "925:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "880:59:0"
            },
            "returnParameters": {
              "id": 42,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "957:0:0"
            },
            "scope": 112,
            "src": "867:329:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 110,
              "nodeType": "Block",
              "src": "1487:146:0",
              "statements": [
                {
                  "assignments": [
                    90
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 90,
                      "name": "_truffle",
                      "nodeType": "VariableDeclaration",
                      "scope": 110,
                      "src": "1493:23:0",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Truffle_$32_memory_ptr",
                        "typeString": "struct CryptoTruffles.Truffle"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 89,
                        "name": "Truffle",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 32,
                        "src": "1493:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Truffle_$32_storage_ptr",
                          "typeString": "struct CryptoTruffles.Truffle"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 94,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 91,
                      "name": "truffles",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 16,
                      "src": "1519:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_Truffle_$32_storage_$dyn_storage",
                        "typeString": "struct CryptoTruffles.Truffle storage ref[] storage ref"
                      }
                    },
                    "id": 93,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 92,
                      "name": "_truffleId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 80,
                      "src": "1528:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "1519:20:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Truffle_$32_storage",
                      "typeString": "struct CryptoTruffles.Truffle storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1493:46:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 98,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 95,
                      "name": "title",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 83,
                      "src": "1546:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 96,
                        "name": "_truffle",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 90,
                        "src": "1554:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Truffle_$32_memory_ptr",
                          "typeString": "struct CryptoTruffles.Truffle memory"
                        }
                      },
                      "id": 97,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "title",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 27,
                      "src": "1554:14:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory",
                        "typeString": "string memory"
                      }
                    },
                    "src": "1546:22:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "id": 99,
                  "nodeType": "ExpressionStatement",
                  "src": "1546:22:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 103,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 100,
                      "name": "color",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 85,
                      "src": "1574:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 101,
                        "name": "_truffle",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 90,
                        "src": "1582:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Truffle_$32_memory_ptr",
                          "typeString": "struct CryptoTruffles.Truffle memory"
                        }
                      },
                      "id": 102,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "color",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 29,
                      "src": "1582:14:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory",
                        "typeString": "string memory"
                      }
                    },
                    "src": "1574:22:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "id": 104,
                  "nodeType": "ExpressionStatement",
                  "src": "1574:22:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 108,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 105,
                      "name": "emotion",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 87,
                      "src": "1602:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_Emotion_$25",
                        "typeString": "enum CryptoTruffles.Emotion"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 106,
                        "name": "_truffle",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 90,
                        "src": "1612:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Truffle_$32_memory_ptr",
                          "typeString": "struct CryptoTruffles.Truffle memory"
                        }
                      },
                      "id": 107,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "emotion",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 31,
                      "src": "1612:16:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_Emotion_$25",
                        "typeString": "enum CryptoTruffles.Emotion"
                      }
                    },
                    "src": "1602:26:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_Emotion_$25",
                      "typeString": "enum CryptoTruffles.Emotion"
                    }
                  },
                  "id": 109,
                  "nodeType": "ExpressionStatement",
                  "src": "1602:26:0"
                }
              ]
            },
            "documentation": "@dev Gets the details of the requested Truffle\n@param _truffleId uint256 ID of the truffle\n@return  title (name), color and emotion of the truffle",
            "id": 111,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getTruffle",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 81,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 80,
                  "name": "_truffleId",
                  "nodeType": "VariableDeclaration",
                  "scope": 111,
                  "src": "1390:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 79,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1390:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1389:17:0"
            },
            "returnParameters": {
              "id": 88,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 83,
                  "name": "title",
                  "nodeType": "VariableDeclaration",
                  "scope": 111,
                  "src": "1428:19:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 82,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1428:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 85,
                  "name": "color",
                  "nodeType": "VariableDeclaration",
                  "scope": 111,
                  "src": "1449:19:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 84,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1449:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 87,
                  "name": "emotion",
                  "nodeType": "VariableDeclaration",
                  "scope": 111,
                  "src": "1470:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_Emotion_$25",
                    "typeString": "enum CryptoTruffles.Emotion"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 86,
                    "name": "Emotion",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 25,
                    "src": "1470:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_Emotion_$25",
                      "typeString": "enum CryptoTruffles.Emotion"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1427:59:0"
            },
            "scope": 112,
            "src": "1370:263:0",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 113,
        "src": "188:1447:0"
      }
    ],
    "src": "0:1636:0"
  },
  "legacyAST": {
    "absolutePath": "/Users/bluer/Developer/truffle-u-cryptotruffles/contracts/CryptoTruffles.sol",
    "exportedSymbols": {
      "CryptoTruffles": [
        112
      ]
    },
    "id": 113,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".2"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:0"
      },
      {
        "absolutePath": "/Users/bluer/Developer/truffle-u-cryptotruffles/node_modules/openzeppelin-solidity/contracts/token/ERC721/ERC721.sol",
        "file": "../node_modules/openzeppelin-solidity/contracts/token/ERC721/ERC721.sol",
        "id": 2,
        "nodeType": "ImportDirective",
        "scope": 113,
        "sourceUnit": 1062,
        "src": "25:81:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/bluer/Developer/truffle-u-cryptotruffles/node_modules/openzeppelin-solidity/contracts/ownership/Ownable.sol",
        "file": "../node_modules/openzeppelin-solidity/contracts/ownership/Ownable.sol",
        "id": 3,
        "nodeType": "ImportDirective",
        "scope": 113,
        "sourceUnit": 517,
        "src": "107:79:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 4,
              "name": "ERC721",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1061,
              "src": "215:6:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC721_$1061",
                "typeString": "contract ERC721"
              }
            },
            "id": 5,
            "nodeType": "InheritanceSpecifier",
            "src": "215:6:0"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 6,
              "name": "Ownable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 516,
              "src": "223:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Ownable_$516",
                "typeString": "contract Ownable"
              }
            },
            "id": 7,
            "nodeType": "InheritanceSpecifier",
            "src": "223:7:0"
          }
        ],
        "contractDependencies": [
          269,
          279,
          516,
          1061,
          1164
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 112,
        "linearizedBaseContracts": [
          112,
          516,
          1061,
          1164,
          269,
          279
        ],
        "name": "CryptoTruffles",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 10,
            "name": "name",
            "nodeType": "VariableDeclaration",
            "scope": 112,
            "src": "235:36:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 8,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "235:6:0",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "43727970746f54727566666c65",
              "id": 9,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "string",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "256:15:0",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_stringliteral_382c7cc53deb5a67708ac081c7a2b14d01a1f6b46fa00c259d32abdefce28aec",
                "typeString": "literal_string \"CryptoTruffle\""
              },
              "value": "CryptoTruffle"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 13,
            "name": "symbol",
            "nodeType": "VariableDeclaration",
            "scope": 112,
            "src": "275:28:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 11,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "275:6:0",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "545246",
              "id": 12,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "string",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "298:5:0",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_stringliteral_a60fcebaee63e207242929916a51981c1c28619b8c468829f8d428354b2461fe",
                "typeString": "literal_string \"TRF\""
              },
              "value": "TRF"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 16,
            "name": "truffles",
            "nodeType": "VariableDeclaration",
            "scope": 112,
            "src": "341:18:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_struct$_Truffle_$32_storage_$dyn_storage",
              "typeString": "struct CryptoTruffles.Truffle[]"
            },
            "typeName": {
              "baseType": {
                "contractScope": null,
                "id": 14,
                "name": "Truffle",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 32,
                "src": "341:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Truffle_$32_storage_ptr",
                  "typeString": "struct CryptoTruffles.Truffle"
                }
              },
              "id": 15,
              "length": null,
              "nodeType": "ArrayTypeName",
              "src": "341:9:0",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_struct$_Truffle_$32_storage_$dyn_storage_ptr",
                "typeString": "struct CryptoTruffles.Truffle[]"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 19,
              "nodeType": "Block",
              "src": "385:5:0",
              "statements": []
            },
            "documentation": null,
            "id": 20,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 17,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "375:2:0"
            },
            "returnParameters": {
              "id": 18,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "385:0:0"
            },
            "scope": 112,
            "src": "364:26:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "canonicalName": "CryptoTruffles.Emotion",
            "id": 25,
            "members": [
              {
                "id": 21,
                "name": "HAPPY",
                "nodeType": "EnumValue",
                "src": "462:5:0"
              },
              {
                "id": 22,
                "name": "LAUGHING",
                "nodeType": "EnumValue",
                "src": "469:8:0"
              },
              {
                "id": 23,
                "name": "WINKING",
                "nodeType": "EnumValue",
                "src": "479:7:0"
              },
              {
                "id": 24,
                "name": "COOL",
                "nodeType": "EnumValue",
                "src": "488:4:0"
              }
            ],
            "name": "Emotion",
            "nodeType": "EnumDefinition",
            "src": "447:47:0"
          },
          {
            "canonicalName": "CryptoTruffles.Truffle",
            "id": 32,
            "members": [
              {
                "constant": false,
                "id": 27,
                "name": "title",
                "nodeType": "VariableDeclaration",
                "scope": 32,
                "src": "569:12:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 26,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "569:6:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 29,
                "name": "color",
                "nodeType": "VariableDeclaration",
                "scope": 32,
                "src": "587:12:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 28,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "587:6:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 31,
                "name": "emotion",
                "nodeType": "VariableDeclaration",
                "scope": 32,
                "src": "605:15:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_enum$_Emotion_$25",
                  "typeString": "enum CryptoTruffles.Emotion"
                },
                "typeName": {
                  "contractScope": null,
                  "id": 30,
                  "name": "Emotion",
                  "nodeType": "UserDefinedTypeName",
                  "referencedDeclaration": 25,
                  "src": "605:7:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_Emotion_$25",
                    "typeString": "enum CryptoTruffles.Emotion"
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "Truffle",
            "nodeType": "StructDefinition",
            "scope": 112,
            "src": "548:77:0",
            "visibility": "public"
          },
          {
            "body": {
              "id": 77,
              "nodeType": "Block",
              "src": "957:239:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 49,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 45,
                                "name": "Emotion",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 25,
                                "src": "976:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_enum$_Emotion_$25_$",
                                  "typeString": "type(enum CryptoTruffles.Emotion)"
                                }
                              },
                              "id": 46,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberName": "COOL",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "976:12:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_Emotion_$25",
                                "typeString": "enum CryptoTruffles.Emotion"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_enum$_Emotion_$25",
                                "typeString": "enum CryptoTruffles.Emotion"
                              }
                            ],
                            "id": 44,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "971:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint256_$",
                              "typeString": "type(uint256)"
                            },
                            "typeName": "uint"
                          },
                          "id": 47,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "971:18:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 48,
                          "name": "_emotion",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 38,
                          "src": "993:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "971:30:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 43,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1217,
                        1218
                      ],
                      "referencedDeclaration": 1217,
                      "src": "963:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 50,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "963:39:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 51,
                  "nodeType": "ExpressionStatement",
                  "src": "963:39:0"
                },
                {
                  "assignments": [
                    53
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 53,
                      "name": "_truffle",
                      "nodeType": "VariableDeclaration",
                      "scope": 77,
                      "src": "1009:23:0",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Truffle_$32_memory_ptr",
                        "typeString": "struct CryptoTruffles.Truffle"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 52,
                        "name": "Truffle",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 32,
                        "src": "1009:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Truffle_$32_storage_ptr",
                          "typeString": "struct CryptoTruffles.Truffle"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 61,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 55,
                        "name": "_title",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 34,
                        "src": "1052:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 56,
                        "name": "_color",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 36,
                        "src": "1067:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 58,
                            "name": "_emotion",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 38,
                            "src": "1092:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 57,
                          "name": "Emotion",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 25,
                          "src": "1084:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_enum$_Emotion_$25_$",
                            "typeString": "type(enum CryptoTruffles.Emotion)"
                          }
                        },
                        "id": 59,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1084:17:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_Emotion_$25",
                          "typeString": "enum CryptoTruffles.Emotion"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": null,
                      "id": 54,
                      "name": "Truffle",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 32,
                      "src": "1035:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_struct$_Truffle_$32_storage_ptr_$",
                        "typeString": "type(struct CryptoTruffles.Truffle storage pointer)"
                      }
                    },
                    "id": 60,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "structConstructorCall",
                    "lValueRequested": false,
                    "names": [
                      "title",
                      "color",
                      "emotion"
                    ],
                    "nodeType": "FunctionCall",
                    "src": "1035:69:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Truffle_$32_memory",
                      "typeString": "struct CryptoTruffles.Truffle memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1009:95:0"
                },
                {
                  "assignments": [
                    63
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 63,
                      "name": "_truffleId",
                      "nodeType": "VariableDeclaration",
                      "scope": 77,
                      "src": "1110:15:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 62,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "1110:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 70,
                  "initialValue": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 69,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 66,
                          "name": "_truffle",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 53,
                          "src": "1142:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Truffle_$32_memory_ptr",
                            "typeString": "struct CryptoTruffles.Truffle memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_struct$_Truffle_$32_memory_ptr",
                            "typeString": "struct CryptoTruffles.Truffle memory"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "id": 64,
                          "name": "truffles",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 16,
                          "src": "1128:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_Truffle_$32_storage_$dyn_storage",
                            "typeString": "struct CryptoTruffles.Truffle storage ref[] storage ref"
                          }
                        },
                        "id": 65,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "push",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "1128:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_arraypush_nonpayable$_t_struct$_Truffle_$32_storage_$returns$_t_uint256_$",
                          "typeString": "function (struct CryptoTruffles.Truffle storage ref) returns (uint256)"
                        }
                      },
                      "id": 67,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1128:23:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "-",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "31",
                      "id": 68,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1154:1:0",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "1128:27:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1110:45:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 72,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1214,
                          "src": "1168:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 73,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "1168:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 74,
                        "name": "_truffleId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 63,
                        "src": "1180:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 71,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 888,
                      "src": "1162:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 75,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1162:29:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 76,
                  "nodeType": "ExpressionStatement",
                  "src": "1162:29:0"
                }
              ]
            },
            "documentation": "@dev Mints a fresh new Truffle\n@param _title string with the title / name of the truffle\n@param _color string (hex / css color name) of the truffle\n@param _emotion uint256 indidcating the emotion of the truffle",
            "id": 78,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 41,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 40,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 450,
                  "src": "947:9:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "947:9:0"
              }
            ],
            "name": "mint",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 39,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 34,
                  "name": "_title",
                  "nodeType": "VariableDeclaration",
                  "scope": 78,
                  "src": "881:20:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 33,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "881:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 36,
                  "name": "_color",
                  "nodeType": "VariableDeclaration",
                  "scope": 78,
                  "src": "903:20:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 35,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "903:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 38,
                  "name": "_emotion",
                  "nodeType": "VariableDeclaration",
                  "scope": 78,
                  "src": "925:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 37,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "925:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "880:59:0"
            },
            "returnParameters": {
              "id": 42,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "957:0:0"
            },
            "scope": 112,
            "src": "867:329:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 110,
              "nodeType": "Block",
              "src": "1487:146:0",
              "statements": [
                {
                  "assignments": [
                    90
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 90,
                      "name": "_truffle",
                      "nodeType": "VariableDeclaration",
                      "scope": 110,
                      "src": "1493:23:0",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Truffle_$32_memory_ptr",
                        "typeString": "struct CryptoTruffles.Truffle"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 89,
                        "name": "Truffle",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 32,
                        "src": "1493:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Truffle_$32_storage_ptr",
                          "typeString": "struct CryptoTruffles.Truffle"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 94,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 91,
                      "name": "truffles",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 16,
                      "src": "1519:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_Truffle_$32_storage_$dyn_storage",
                        "typeString": "struct CryptoTruffles.Truffle storage ref[] storage ref"
                      }
                    },
                    "id": 93,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 92,
                      "name": "_truffleId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 80,
                      "src": "1528:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "1519:20:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Truffle_$32_storage",
                      "typeString": "struct CryptoTruffles.Truffle storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1493:46:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 98,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 95,
                      "name": "title",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 83,
                      "src": "1546:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 96,
                        "name": "_truffle",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 90,
                        "src": "1554:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Truffle_$32_memory_ptr",
                          "typeString": "struct CryptoTruffles.Truffle memory"
                        }
                      },
                      "id": 97,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "title",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 27,
                      "src": "1554:14:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory",
                        "typeString": "string memory"
                      }
                    },
                    "src": "1546:22:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "id": 99,
                  "nodeType": "ExpressionStatement",
                  "src": "1546:22:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 103,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 100,
                      "name": "color",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 85,
                      "src": "1574:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 101,
                        "name": "_truffle",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 90,
                        "src": "1582:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Truffle_$32_memory_ptr",
                          "typeString": "struct CryptoTruffles.Truffle memory"
                        }
                      },
                      "id": 102,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "color",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 29,
                      "src": "1582:14:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory",
                        "typeString": "string memory"
                      }
                    },
                    "src": "1574:22:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "id": 104,
                  "nodeType": "ExpressionStatement",
                  "src": "1574:22:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 108,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 105,
                      "name": "emotion",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 87,
                      "src": "1602:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_Emotion_$25",
                        "typeString": "enum CryptoTruffles.Emotion"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 106,
                        "name": "_truffle",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 90,
                        "src": "1612:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Truffle_$32_memory_ptr",
                          "typeString": "struct CryptoTruffles.Truffle memory"
                        }
                      },
                      "id": 107,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "emotion",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 31,
                      "src": "1612:16:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_Emotion_$25",
                        "typeString": "enum CryptoTruffles.Emotion"
                      }
                    },
                    "src": "1602:26:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_Emotion_$25",
                      "typeString": "enum CryptoTruffles.Emotion"
                    }
                  },
                  "id": 109,
                  "nodeType": "ExpressionStatement",
                  "src": "1602:26:0"
                }
              ]
            },
            "documentation": "@dev Gets the details of the requested Truffle\n@param _truffleId uint256 ID of the truffle\n@return  title (name), color and emotion of the truffle",
            "id": 111,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getTruffle",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 81,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 80,
                  "name": "_truffleId",
                  "nodeType": "VariableDeclaration",
                  "scope": 111,
                  "src": "1390:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 79,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1390:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1389:17:0"
            },
            "returnParameters": {
              "id": 88,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 83,
                  "name": "title",
                  "nodeType": "VariableDeclaration",
                  "scope": 111,
                  "src": "1428:19:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 82,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1428:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 85,
                  "name": "color",
                  "nodeType": "VariableDeclaration",
                  "scope": 111,
                  "src": "1449:19:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 84,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1449:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 87,
                  "name": "emotion",
                  "nodeType": "VariableDeclaration",
                  "scope": 111,
                  "src": "1470:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_Emotion_$25",
                    "typeString": "enum CryptoTruffles.Emotion"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 86,
                    "name": "Emotion",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 25,
                    "src": "1470:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_Emotion_$25",
                      "typeString": "enum CryptoTruffles.Emotion"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1427:59:0"
            },
            "scope": 112,
            "src": "1370:263:0",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 113,
        "src": "188:1447:0"
      }
    ],
    "src": "0:1636:0"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.2+commit.1df8f40c.Emscripten.clang"
  },
  "networks": {
    "5777": {
      "events": {
        "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "name": "previousOwner",
              "type": "address"
            },
            {
              "indexed": true,
              "name": "newOwner",
              "type": "address"
            }
          ],
          "name": "OwnershipTransferred",
          "type": "event",
          "signature": "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0"
        },
        "0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "name": "from",
              "type": "address"
            },
            {
              "indexed": true,
              "name": "to",
              "type": "address"
            },
            {
              "indexed": true,
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "name": "Transfer",
          "type": "event",
          "signature": "0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef"
        },
        "0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "name": "owner",
              "type": "address"
            },
            {
              "indexed": true,
              "name": "approved",
              "type": "address"
            },
            {
              "indexed": true,
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "name": "Approval",
          "type": "event",
          "signature": "0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925"
        },
        "0x17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "name": "owner",
              "type": "address"
            },
            {
              "indexed": true,
              "name": "operator",
              "type": "address"
            },
            {
              "indexed": false,
              "name": "approved",
              "type": "bool"
            }
          ],
          "name": "ApprovalForAll",
          "type": "event",
          "signature": "0x17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31"
        }
      },
      "links": {},
      "address": "0x6c6417a23C27c8F5d6947E8988496273b1a3887E",
      "transactionHash": "0x91d5a7e32444e17811a961383ea3d3f64fb0b69e510840d6ca75959a2e76f62e"
    }
  },
  "schemaVersion": "3.0.0",
  "updatedAt": "2019-04-12T22:44:54.292Z",
  "devdoc": {
    "methods": {
      "approve(address,uint256)": {
        "details": "Approves another address to transfer the given token ID The zero address indicates there is no approved address. There can only be one approved address per token at a given time. Can only be called by the token owner or an approved operator.",
        "params": {
          "to": "address to be approved for the given token ID",
          "tokenId": "uint256 ID of the token to be approved"
        }
      },
      "balanceOf(address)": {
        "details": "Gets the balance of the specified address",
        "params": {
          "owner": "address to query the balance of"
        },
        "return": "uint256 representing the amount owned by the passed address"
      },
      "getApproved(uint256)": {
        "details": "Gets the approved address for a token ID, or zero if no address set Reverts if the token ID does not exist.",
        "params": {
          "tokenId": "uint256 ID of the token to query the approval of"
        },
        "return": "address currently approved for the given token ID"
      },
      "getTruffle(uint256)": {
        "details": "Gets the details of the requested Truffle",
        "params": {
          "_truffleId": "uint256 ID of the truffle"
        },
        "return": "title (name), color and emotion of the truffle"
      },
      "isApprovedForAll(address,address)": {
        "details": "Tells whether an operator is approved by a given owner",
        "params": {
          "operator": "operator address which you want to query the approval of",
          "owner": "owner address which you want to query the approval of"
        },
        "return": "bool whether the given operator is approved by the given owner"
      },
      "isOwner()": {
        "return": "true if `msg.sender` is the owner of the contract."
      },
      "mint(string,string,uint256)": {
        "details": "Mints a fresh new Truffle",
        "params": {
          "_color": "string (hex / css color name) of the truffle",
          "_emotion": "uint256 indidcating the emotion of the truffle",
          "_title": "string with the title / name of the truffle"
        }
      },
      "owner()": {
        "return": "the address of the owner."
      },
      "ownerOf(uint256)": {
        "details": "Gets the owner of the specified token ID",
        "params": {
          "tokenId": "uint256 ID of the token to query the owner of"
        },
        "return": "address currently marked as the owner of the given token ID"
      },
      "renounceOwnership()": {
        "details": "Allows the current owner to relinquish control of the contract. It will not be possible to call the functions with the `onlyOwner` modifier anymore."
      },
      "safeTransferFrom(address,address,uint256)": {
        "details": "Safely transfers the ownership of a given token ID to another address If the target address is a contract, it must implement `onERC721Received`, which is called upon a safe transfer, and return the magic value `bytes4(keccak256(\"onERC721Received(address,address,uint256,bytes)\"))`; otherwise, the transfer is reverted. Requires the msg.sender to be the owner, approved, or operator",
        "params": {
          "from": "current owner of the token",
          "to": "address to receive the ownership of the given token ID",
          "tokenId": "uint256 ID of the token to be transferred"
        }
      },
      "safeTransferFrom(address,address,uint256,bytes)": {
        "details": "Safely transfers the ownership of a given token ID to another address If the target address is a contract, it must implement `onERC721Received`, which is called upon a safe transfer, and return the magic value `bytes4(keccak256(\"onERC721Received(address,address,uint256,bytes)\"))`; otherwise, the transfer is reverted. Requires the msg.sender to be the owner, approved, or operator",
        "params": {
          "_data": "bytes data to send along with a safe transfer check",
          "from": "current owner of the token",
          "to": "address to receive the ownership of the given token ID",
          "tokenId": "uint256 ID of the token to be transferred"
        }
      },
      "setApprovalForAll(address,bool)": {
        "details": "Sets or unsets the approval of a given operator An operator is allowed to transfer all tokens of the sender on their behalf",
        "params": {
          "approved": "representing the status of the approval to be set",
          "to": "operator address to set the approval"
        }
      },
      "supportsInterface(bytes4)": {
        "details": "implement supportsInterface(bytes4) using a lookup table"
      },
      "transferFrom(address,address,uint256)": {
        "details": "Transfers the ownership of a given token ID to another address Usage of this method is discouraged, use `safeTransferFrom` whenever possible Requires the msg.sender to be the owner, approved, or operator",
        "params": {
          "from": "current owner of the token",
          "to": "address to receive the ownership of the given token ID",
          "tokenId": "uint256 ID of the token to be transferred"
        }
      },
      "transferOwnership(address)": {
        "details": "Allows the current owner to transfer control of the contract to a newOwner.",
        "params": {
          "newOwner": "The address to transfer ownership to."
        }
      }
    }
  },
  "userdoc": {
    "methods": {
      "renounceOwnership()": {
        "notice": "Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      }
    }
  }
}